options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: kerem
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: Data
  id: variable
  parameters:
    comment: ''
    value: numpy.random.randint(M,size=dat_len)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 48.0]
    rotation: 0
    state: true
- name: M
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: 3,1,1,1
    label: Modulation Order
    label0: ''
    label1: ''
    label2: ''
    label3: ''
    label4: ''
    labels: '[]'
    num_opts: '5'
    option0: '4'
    option1: '16'
    option2: '64'
    option3: '256'
    option4: '1024'
    options: '[0, 1, 2]'
    orient: Qt.QHBoxLayout
    type: int
    value: '4'
    widget: radio_buttons
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, -16.0]
    rotation: 0
    state: true
- name: dat_len
  id: variable
  parameters:
    comment: ''
    value: fram_len//filt_len
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 104.0]
    rotation: 0
    state: enabled
- name: filt_len
  id: variable
  parameters:
    comment: ''
    value: span*sps+1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 56.0]
    rotation: 0
    state: enabled
- name: fram_len
  id: variable
  parameters:
    comment: ''
    value: '4096'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 104.0]
    rotation: 0
    state: enabled
- name: frame_len
  id: variable
  parameters:
    comment: ''
    value: dat_len*filt_len
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 104.0]
    rotation: 0
    state: enabled
- name: freq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 2,1,1,1
    label: Frequency
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.05'
    stop: '0.5'
    value: '0.25'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, -4.0]
    rotation: 0
    state: enabled
- name: inph
  id: variable
  parameters:
    comment: ''
    value: numpy.multiply(rrrc,numpy.cos(numpy.array(range(filt_len))*2*math.pi*freq))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 8.0]
    rotation: 0
    state: true
- name: noise
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 2,0,1,1
    label: Noise Power
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '-30'
    step: '0.5'
    stop: '10'
    value: '-10'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [592, -4.0]
    rotation: 0
    state: enabled
- name: quad
  id: variable
  parameters:
    comment: ''
    value: numpy.multiply(rrrc,numpy.sin(numpy.array(range(filt_len))*2*math.pi*freq))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 56.0]
    rotation: 0
    state: true
- name: rrrc
  id: variable_rrc_filter_taps
  parameters:
    alpha: '0.1'
    comment: ''
    gain: numpy.sqrt(sps*2)
    ntaps: filt_len
    samp_rate: samp_rate
    sym_rate: samp_rate/sps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 12.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '8192'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [144, 8.0]
    rotation: 0
    state: enabled
- name: span
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 8.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 56.0]
    rotation: 0
    state: enabled
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 196.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_float_0
  id: blocks_complex_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 196.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_float_1
  id: blocks_complex_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 540.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [56, 644.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 460.0]
    rotation: 0
    state: disabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /Users/keremenhos/Desktop/NEU/VLC v2/GNURadio/data_test.dat
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 312.0]
    rotation: 0
    state: disabled
- name: blocks_file_sink_0_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /Users/keremenhos/Desktop/NEU/VLC v2/GNURadio/data_test2.dat
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 120.0]
    rotation: 0
    state: disabled
- name: blocks_float_to_complex_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [880, 284.0]
    rotation: 180
    state: enabled
- name: blocks_float_to_complex_1
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 372.0]
    rotation: 0
    state: enabled
- name: blocks_keep_m_in_n_0
  id: blocks_keep_m_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    m: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: filt_len
    offset: filt_len-2
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 376.0]
    rotation: 0
    state: enabled
- name: blocks_keep_m_in_n_1
  id: blocks_keep_m_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    m: frame_len
    maxoutbuf: '0'
    minoutbuf: '0'
    n: fram_len
    offset: '0'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224.0, 416]
    rotation: 270
    state: enabled
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 380.0]
    rotation: 0
    state: disabled
- name: blocks_null_sink_1
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: int
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 540.0]
    rotation: 0
    state: disabled
- name: blocks_stream_to_tagged_stream_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: '510'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 112.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_1
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: packet_len
    maxoutbuf: '8192'
    minoutbuf: '0'
    packet_len: frame_len
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 176.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_2
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: pck
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: frame_len
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352.0, 408]
    rotation: 90
    state: true
- name: blocks_tag_gate_0
  id: blocks_tag_gate
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_tags: 'False'
    single_key: '""'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 568.0]
    rotation: 0
    state: true
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 236.0]
    rotation: 180
    state: enabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 388.0]
    rotation: 0
    state: true
- name: blocks_vector_insert_x_0
  id: blocks_vector_insert_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    period: filt_len
    type: float
    vector: '[0]*(filt_len-1)'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 168.0]
    rotation: 0
    state: enabled
- name: blocks_vector_insert_x_0_0
  id: blocks_vector_insert_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    period: filt_len
    type: float
    vector: '[0]*(filt_len-1)'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 248.0]
    rotation: 0
    state: enabled
- name: blocks_vector_source_x_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'True'
    tags: '[]'
    type: float
    vector: '[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,1,1,1,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,1,1,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,1,1,0,0,1,1,1,0,1,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,0,1,1,0,0,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,0,1,0,0,1,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1,0,0,1,1,1,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0,1,0,0,0,0,0,1,1,0,1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,0,0,1,1,0,1,0,1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,0,1,0,1,1,0,0,1,0,0,1,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0,1,1,0,0,1,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0]'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 104.0]
    rotation: 0
    state: enabled
- name: blocks_vector_source_x_0_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'True'
    tags: '[]'
    type: int
    vector: Data
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 184.0]
    rotation: 0
    state: enabled
- name: channels_channel_model_0
  id: channels_channel_model
  parameters:
    affinity: ''
    alias: ''
    block_tags: 'True'
    comment: ''
    epsilon: '1'
    freq_offset: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_voltage: 10.0**(noise/10.0)
    seed: '0'
    taps: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 276.0]
    rotation: 180
    state: enabled
- name: digital_corr_est_cc_0
  id: digital_corr_est_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    mark_delay: '509'
    maxoutbuf: '0'
    minoutbuf: '0'
    sps: '1'
    symbols: '[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,1,1,1,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,1,1,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,1,1,0,0,1,1,1,0,1,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,0,1,1,0,0,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,0,1,0,0,1,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,0,1,0,0,1,1,1,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0,1,0,0,0,0,0,1,1,0,1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,0,0,1,1,0,1,0,1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,0,1,0,1,1,0,0,1,0,0,1,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0,1,1,0,0,1,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0]'
    threshold: '0.5'
    threshold_method: digital.THRESHOLD_ABSOLUTE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [28.0, 328]
    rotation: 270
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    M: M
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, M=4):  #\
      \ only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='QAM Modulator',   # will show up in GRC\n     \
      \       in_sig=[np.int32],\n            out_sig=[np.complex64]\n        )\n\
      \        self.M = M\n        self.tM = M\n        n = np.arange(0,self.M)\n\
      \        a = np.asarray([x^(x>>1) for x in n])\n        D = np.sqrt(self.M).astype(int)\n\
      \        a = np.reshape(a,(D,D))\n        a[1::2, :] = a[1::2, ::-1]\n     \
      \   nGray=np.reshape(a,(self.M))\n        x = nGray//D\n        y = nGray%D\n\
      \        Ay=2*y+1-D\n        Ax=2*x+1-D\n        self.cons = Ax+1j*Ay\n    \
      \    self.cons = self.cons/np.max(np.absolute((np.real(self.cons))))\n\n   \
      \ def work(self, input_items, output_items):\n        if self.M != self.tM:\n\
      \            n = np.arange(0,self.M)\n            a = np.asarray([x^(x>>1) for\
      \ x in n])\n            D = np.sqrt(self.M).astype(int)\n            a = np.reshape(a,(D,D))\n\
      \            a[1::2, :] = a[1::2, ::-1]\n            nGray=np.reshape(a,(self.M))\n\
      \            x = nGray//D\n            y = nGray%D\n            Ay=2*y+1-D\n\
      \            Ax=2*x+1-D\n            self.cons = Ax+1j*Ay\n            self.cons\
      \ = self.cons/np.max(np.absolute((np.real(self.cons))))\n            self.tM\
      \ = self.M\n        for x in range(len(input_items[0])):\n            output_items[0][x]\
      \ = self.cons[input_items[0][x]]\n        \n        \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('QAM Modulator', 'blk', [('M', '4')], [('0', 'int', 1)], [('0', 'complex',
      1)], 'Embedded Python Block example - a simple multiply const', ['M'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 196.0]
    rotation: 0
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import time\nimport random\nimport numpy as np\n\nfrom gnuradio\
      \ import gr\nfrom gnuradio import gr_unittest\nfrom gnuradio import digital\n\
      from gnuradio import blocks\nfrom gnuradio import grc\nimport pmt\nimport inspect\n\
      \ndef get_top_variable(variable_name=\"\", default=None):\n    '''\n    Returns\
      \ the value of a variable from the flow graph.\n    '''\n\n    # Let's go!\n\
      \    try:\n        ## Run Condition: GNURadio is starting the flowgraph\n  \
      \      top = inspect.currentframe().f_back.f_back.f_locals\n\n        # Check\
      \ if top has the variable name we're looking for\n        if top.__contains__(variable_name):\n\
      \n            # Let the user know we found the variable\n#            print(f\"\
      [Block Debug] While starting, I found top variable \\'{variable_name}\\': type={type(top[variable_name])},\
      \ value={top[variable_name]}\")\n\n            # Return the value of the variable\
      \ name\n            return top[variable_name]\n\n        ## Run Condition: Saving\
      \ the flowgraph\n        top = inspect.currentframe().f_back.f_back.f_back.f_back.f_back.f_locals\n\
      \n        # Make sure top has 'self'\n        if top.__contains__(\"self\")\
      \ and \\\n                (isinstance(top['self'], grc.gui.canvas.flowgraph.FlowGraph))\
      \ and \\\n                (hasattr(top['self'], 'blocks')):\n\n            #\
      \ Get a list of all blocks\n            block_names = [block.name for block\
      \ in top['self'].blocks]\n\n            # Find the index to the variable we\
      \ need\n            block_index = block_names.index(variable_name)\n\n     \
      \       # Store the result\n            result = top['self'].blocks[block_index].params['value'].value\n\
      \n            # Let the user know we found the variable\n#            print(f\"\
      [Block Debug] While modifying the flowgraph, I found top variable \\'{variable_name}\\\
      ': type={type(result)}, value={result}\")\n\n            # Return the value\
      \ of the variable we found\n            return result\n\n    # Something went\
      \ wrong\n    except Exception as e:\n        print(\"[Block Debug]: Threw an\
      \ exception\", e)\n    except:\n        print(\"[Block Debug]: Threw an unknown\
      \ exception.\")\n\n    # Return the default result\n    return default\n\nclass\
      \ blk(gr.sync_block):\n    def __init__(self, frame_length=1):\n    \n     #\
      \ Get packet length\n        fram_len = get_top_variable(\"fram_len\", default=10)\n\
      #        print(f\"[Block Debug] Setting input length using \\'fram_len\\': {fram_len},\
      \ type={type(fram_len)}\")\n        \n        gr.sync_block.__init__(\n    \
      \        self,\n            name=\"Preamble Demux\",\n            in_sig=[np.float32],\n\
      #            out_sig=[(np.float32,fram_len if isinstance(fram_len, int) else\
      \ int(fram_len))]\n            out_sig=[np.float32]\n        )\n        self.aa\
      \ = 0\n        self.buf = []\n        self.off = 0\n        self.det = 0\n \
      \       self.flg2 = 0\n        self.a = 0\n        self.b = 0\n        self.fram_len\
      \ = fram_len\n        self.frame_length = frame_length\n        \n    \n   \
      \ def work(self, input_items, output_items):\n        if self.det == 0:\n  \
      \          tags = self.get_tags_in_window(0, 0, len(input_items[0]))\n     \
      \       for tag in tags:\n                offset = tag.offset\n            \
      \    key = pmt.to_python(tag.key) # convert from PMT to python string\n    \
      \            if key == 'corr_est':\n                    self.off = offset\n\
      \                    self.det = 1\n                    self.flg2 = 0\n     \
      \               self.buf.extend(input_items[0][(self.off-self.aa)+1:])\n   \
      \                 break\n                    \n        if len(self.buf)<self.frame_length\
      \ and self.det == 1 and self.flg2 == 1:\n            self.buf.extend(input_items[0])\n\
      \        \n        if len(self.buf)>=self.frame_length and self.det == 1 and\
      \ self.flg2 == 1 and len(output_items[0])>=self.fram_len:\n            output_items[0][:self.frame_length]\
      \ = self.buf[:self.frame_length]\n            self.buf = []\n            self.det\
      \ = 0\n            \n \n        self.flg2 = 1\n        self.aa = self.aa + len(input_items[0])\n\
      \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    frame_length: fram_len
    maxoutbuf: ''
    minoutbuf: '4096'
  states:
    _io_cache: ('Preamble Demux', 'blk', [('frame_length', '1')], [('0', 'float',
      1)], [('0', 'float', 1)], '', ['frame_length'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [172.0, 392]
    rotation: 90
    state: enabled
- name: epy_block_2
  id: epy_block
  parameters:
    M: M
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\nimport time\nimport random\n\
      import numpy as np\n\nfrom gnuradio import gr\nfrom gnuradio import gr_unittest\n\
      from gnuradio import digital\nfrom gnuradio import blocks\nfrom gnuradio import\
      \ grc\nimport pmt\nimport inspect\n\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self, data_length=1.0,\
      \ M=4, tag='', bin_data=[]):  # only default arguments here\n        \"\"\"\
      arguments to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='QAM Demodulator',   # will show up in\
      \ GRC\n            in_sig=[np.complex64],\n            out_sig=[np.int32, np.float32]\n\
      \        )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.data_length\
      \ = data_length\n        self.buf = []\n        self.tag = tag\n        self.aa\
      \ = 0\n        self.det = 0\n        self.flg2 = 0\n        self.bin_data =\
      \ bin_data\n        self.c = 0\n        self.ber = 0\n        self.cc = 0\n\
      \        self.t = 0\n        self.bert = 0\n        self.M=M\n        self.sM\
      \ = int(np.sqrt(self.M))\n\n        \n    def get_minimum_distances(self, sample):\n\
      \         if (sample.imag >= 0 and sample.real >= 0):\n             return 3\
      \ # 1+1j\n         elif (sample.imag >= 0 and sample.real < 0):\n          \
      \   return 1 # -1+1j\n         elif (sample.imag < 0 and sample.real < 0):\n\
      \             return 0 # -1-1j\n         elif (sample.imag < 0 and sample.real\
      \ >= 0):\n             return 2 # 1-1j\n                 \n    def dec2bin(self,\
      \ x, n=0):\n        return format(x, 'b').zfill(n)\n\n    def work(self, input_items,\
      \ output_items):\n        if self.det == 0:\n            tags = self.get_tags_in_window(0,\
      \ 0, len(input_items[0]))\n            for tagg in tags:\n                offset\
      \ = tagg.offset\n                key = pmt.to_python(tagg.key) # convert from\
      \ PMT to python string\n                if key == self.tag:\n              \
      \      self.off = offset\n                    self.det = 1\n               \
      \     self.flg2 = 0\n                    self.buf.extend(input_items[0][(self.off-self.aa)+1:])\n\
      #                    print(self.tag)\n                    break\n          \
      \          \n        if len(self.buf)<self.data_length and self.det == 1 and\
      \ self.flg2 == 1:\n            self.buf.extend(input_items[0])\n           \
      \ \n        if self.cc == 0:\n            self.t = time.time()\n           \
      \ self.cc = 1\n        \n        if len(self.buf)>=self.data_length and self.det\
      \ == 1 and self.flg2 == 1 and len(output_items[0])>=self.data_length:\n    \
      \        for i in range(0, self.data_length):\n                d = self.buf[i]\n\
      \                output_items[0][i] = self.get_minimum_distances(d)\n#     \
      \           output_items[1][i] = self.bert\n                if self.dec2bin(output_items[0][i],int(np.sqrt(self.M)))\
      \ != self.dec2bin(self.bin_data[i],int(np.sqrt(self.M))):\n                \
      \    self.ber = self.ber + np.count_nonzero(np.array(list(map(int,(self.dec2bin(output_items[0][i],int(np.sqrt(self.M)))))))-np.array(list(map(int,(self.dec2bin(self.bin_data[i],int(np.sqrt(self.M))))))))\n\
      \            output_items[1][:] = self.ber\n            self.ber = 0\n     \
      \       self.c = self.c + 1\n            \n#            if self.c > 10//(len(self.bin_data)*int(np.sqrt(self.M))):\n\
      #                self.bert = self.ber/(self.c*len(self.bin_data)*int(np.sqrt(self.M)))\n\
      ##                output_items[1][:self.data_length] = self.bert\n#        \
      \        self.c = 0\n#                self.ber = 0\n#                self.cc\
      \ = 0\n            self.buf = []\n            self.det = 0\n#        output_items[1][:self.data_length]\
      \ = self.bert\n        self.flg2 = 1\n        \n        self.aa = self.aa +\
      \ len(input_items[0])\n\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    bin_data: Data
    comment: ''
    data_length: dat_len
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: '''pck'''
  states:
    _io_cache: ('QAM Demodulator', 'blk', [('data_length', '1.0'), ('M', '4'), ('tag',
      "''"), ('bin_data', '[]')], [('0', 'complex', 1)], [('0', 'int', 1), ('1', 'float',
      1)], 'Embedded Python Block example - a simple multiply const', ['M', 'bin_data',
      'data_length', 'tag'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 536.0]
    rotation: 0
    state: disabled
- name: fir_filter_xxx_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: quad
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 256.0]
    rotation: 0
    state: enabled
- name: fir_filter_xxx_0_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: numpy.flip(quad)
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 392.0]
    rotation: 0
    state: enabled
- name: fir_filter_xxx_1
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: inph
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 176.0]
    rotation: 0
    state: enabled
- name: fir_filter_xxx_1_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: numpy.flip(inph)
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 344.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math,cmath,numpy
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 60.0]
    rotation: 0
    state: true
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: (0,0,2,1)
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '4096'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.1'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 488.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_1
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 128.0]
    rotation: 180
    state: disabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '4096'
    freqhalf: 'False'
    grid: 'False'
    gui_hint: (1,1,1,1)
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: float
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: firdes.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 452.0]
    rotation: 0
    state: true
- name: qtgui_number_sink_1
  id: qtgui_number_sink
  parameters:
    affinity: ''
    alias: ''
    autoscale: 'False'
    avg: 1000//(dat_len*int(numpy.sqrt(M)))
    color1: ("black", "white")
    color10: ("black", "black")
    color2: ("black", "black")
    color3: ("black", "black")
    color4: ("black", "black")
    color5: ("black", "black")
    color6: ("black", "black")
    color7: ("black", "black")
    color8: ("black", "black")
    color9: ("black", "black")
    comment: ''
    factor1: float(1)/(dat_len*int(numpy.sqrt(M)))
    factor10: '1'
    factor2: '1'
    factor3: '1'
    factor4: '1'
    factor5: '1'
    factor6: '1'
    factor7: '1'
    factor8: '1'
    factor9: '1'
    graph_type: qtgui.NUM_GRAPH_HORIZ
    gui_hint: 3,0,1,1
    label1: BER
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    max: '0.0000001'
    min: '0'
    name: BER
    nconnections: '1'
    type: float
    unit1: ''
    unit10: ''
    unit2: ''
    unit3: ''
    unit4: ''
    unit5: ''
    unit6: ''
    unit7: ''
    unit8: ''
    unit9: ''
    update_time: '0.01'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1080, 584.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: '1'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_TAG
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: corr_est
    type: float
    update_time: '0.01'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '70000'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 696.0]
    rotation: 180
    state: enabled
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: 0,1,1,1
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '2'
    size: '128'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_TAG
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: pck
    type: complex
    update_time: '0.1'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 424.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_1_2
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: (0,1,1,1)
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '256'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_TAG
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: pck
    type: complex
    update_time: '0.1'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 540.0]
    rotation: 0
    state: enabled

connections:
- [blocks_add_xx_0, '0', blocks_stream_to_tagged_stream_1, '0']
- [blocks_complex_to_float_0, '0', blocks_vector_insert_x_0, '0']
- [blocks_complex_to_float_0, '1', blocks_vector_insert_x_0_0, '0']
- [blocks_complex_to_float_1, '0', epy_block_1, '0']
- [blocks_complex_to_mag_squared_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_delay_0, '0', qtgui_time_sink_x_1, '1']
- [blocks_float_to_complex_0, '0', channels_channel_model_0, '0']
- [blocks_float_to_complex_1, '0', blocks_keep_m_in_n_0, '0']
- [blocks_keep_m_in_n_0, '0', blocks_throttle_0, '0']
- [blocks_keep_m_in_n_0, '0', epy_block_2, '0']
- [blocks_keep_m_in_n_1, '0', blocks_tag_gate_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', blocks_tagged_stream_mux_0, '0']
- [blocks_stream_to_tagged_stream_1, '0', blocks_tagged_stream_mux_0, '1']
- [blocks_stream_to_tagged_stream_2, '0', fir_filter_xxx_0_0, '0']
- [blocks_stream_to_tagged_stream_2, '0', fir_filter_xxx_1_0, '0']
- [blocks_stream_to_tagged_stream_2, '0', qtgui_freq_sink_x_0, '0']
- [blocks_tag_gate_0, '0', blocks_stream_to_tagged_stream_2, '0']
- [blocks_tagged_stream_mux_0, '0', blocks_float_to_complex_0, '0']
- [blocks_throttle_0, '0', blocks_file_sink_0, '0']
- [blocks_throttle_0, '0', qtgui_const_sink_x_0, '0']
- [blocks_throttle_0, '0', qtgui_time_sink_x_1_2, '0']
- [blocks_vector_insert_x_0, '0', fir_filter_xxx_1, '0']
- [blocks_vector_insert_x_0_0, '0', fir_filter_xxx_0, '0']
- [blocks_vector_source_x_0, '0', blocks_stream_to_tagged_stream_0, '0']
- [blocks_vector_source_x_0_0, '0', epy_block_0, '0']
- [channels_channel_model_0, '0', digital_corr_est_cc_0, '0']
- [digital_corr_est_cc_0, '0', blocks_complex_to_float_1, '0']
- [digital_corr_est_cc_0, '1', blocks_complex_to_mag_squared_0, '0']
- [epy_block_0, '0', blocks_complex_to_float_0, '0']
- [epy_block_0, '0', blocks_delay_0, '0']
- [epy_block_0, '0', blocks_file_sink_0_0, '0']
- [epy_block_0, '0', qtgui_const_sink_x_1, '0']
- [epy_block_1, '0', blocks_keep_m_in_n_1, '0']
- [epy_block_2, '0', blocks_null_sink_1, '0']
- [epy_block_2, '1', qtgui_number_sink_1, '0']
- [fir_filter_xxx_0, '0', blocks_add_xx_0, '1']
- [fir_filter_xxx_0_0, '0', blocks_float_to_complex_1, '1']
- [fir_filter_xxx_1, '0', blocks_add_xx_0, '0']
- [fir_filter_xxx_1_0, '0', blocks_float_to_complex_1, '0']

metadata:
  file_format: 1
