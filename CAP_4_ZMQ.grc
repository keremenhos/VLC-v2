options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: kerem
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: Data
  id: variable
  parameters:
    comment: ''
    value: numpy.array(numpy.random.randint(M,size=dat_len))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 48.0]
    rotation: 0
    state: true
- name: M
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 8.0]
    rotation: 0
    state: true
- name: P
  id: variable_qtgui_check_box
  parameters:
    comment: ''
    'false': '0'
    gui_hint: ''
    label: Print BER
    'true': '1'
    type: int
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248, 44.0]
    rotation: 0
    state: true
- name: VGA
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Gain
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '1'
    step: '1'
    stop: '1000'
    value: '2'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1064, 4.0]
    rotation: 0
    state: disabled
- name: dat_len
  id: variable
  parameters:
    comment: ''
    value: (fram_len//filt_len)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 104.0]
    rotation: 0
    state: enabled
- name: filt_len
  id: variable
  parameters:
    comment: ''
    value: span*sps+1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 56.0]
    rotation: 0
    state: enabled
- name: fram_len
  id: variable
  parameters:
    comment: ''
    value: '4096'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 104.0]
    rotation: 0
    state: enabled
- name: frame_len
  id: variable
  parameters:
    comment: ''
    value: dat_len*filt_len
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 104.0]
    rotation: 0
    state: enabled
- name: freq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 2,1,1,1
    label: Frequency
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.05'
    stop: '0.5'
    value: '0.25'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, -4.0]
    rotation: 0
    state: enabled
- name: freq
  id: variable
  parameters:
    comment: ''
    value: '0.25'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 56.0]
    rotation: 0
    state: disabled
- name: inph
  id: variable
  parameters:
    comment: ''
    value: numpy.multiply(rrrc,numpy.cos(numpy.array(range(filt_len))*2*math.pi*freq))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 8.0]
    rotation: 0
    state: true
- name: noise
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 2,0,1,1
    label: Noise Power
    min_len: '200'
    orient: Qt.Horizontal
    rangeType: float
    start: '-30'
    step: '0.5'
    stop: '10'
    value: '-10'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [960, 4.0]
    rotation: 0
    state: disabled
- name: quad
  id: variable
  parameters:
    comment: ''
    value: numpy.multiply(rrrc,numpy.sin(numpy.array(range(filt_len))*2*math.pi*freq))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 56.0]
    rotation: 0
    state: true
- name: rrrc
  id: variable_rrc_filter_taps
  parameters:
    alpha: '0.1'
    comment: ''
    gain: numpy.sqrt(sps*2)
    ntaps: filt_len
    samp_rate: samp_rate
    sym_rate: samp_rate/sps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 12.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '1000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [144, 8.0]
    rotation: 0
    state: enabled
- name: span
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 8.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 56.0]
    rotation: 0
    state: enabled
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 196.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_float_0
  id: blocks_complex_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 196.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_float_1
  id: blocks_complex_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 540.0]
    rotation: 0
    state: disabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [56, 644.0]
    rotation: 0
    state: disabled
- name: blocks_file_sink_0_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /Users/keremenhos/Desktop/NEU/VLC v2/GNURadio/data_test2.dat
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 128.0]
    rotation: 0
    state: disabled
- name: blocks_file_sink_0_1
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /Users/keremenhos/Desktop/NEU/VLC v2/GNURadio/data_test.dat
    type: float
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 568.0]
    rotation: 0
    state: disabled
- name: blocks_float_to_complex_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 284.0]
    rotation: 0
    state: enabled
- name: blocks_float_to_complex_1
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 372.0]
    rotation: 0
    state: disabled
- name: blocks_keep_m_in_n_0
  id: blocks_keep_m_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    m: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: filt_len
    offset: filt_len-2
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 376.0]
    rotation: 0
    state: disabled
- name: blocks_keep_m_in_n_1
  id: blocks_keep_m_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    m: frame_len
    maxoutbuf: '0'
    minoutbuf: '0'
    n: fram_len
    offset: '0'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224.0, 448]
    rotation: 270
    state: disabled
- name: blocks_stream_to_tagged_stream_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: '510'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 112.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_1
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: frame_len
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 176.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_2
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: pck
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: frame_len
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352.0, 408]
    rotation: 90
    state: disabled
- name: blocks_tag_gate_0
  id: blocks_tag_gate
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_tags: 'False'
    single_key: '""'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 624.0]
    rotation: 0
    state: disabled
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 236.0]
    rotation: 180
    state: enabled
- name: blocks_vector_insert_x_0
  id: blocks_vector_insert_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    period: filt_len
    type: float
    vector: '[0]*(filt_len-1)'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 168.0]
    rotation: 0
    state: enabled
- name: blocks_vector_insert_x_0_0
  id: blocks_vector_insert_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    period: filt_len
    type: float
    vector: '[0]*(filt_len-1)'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 248.0]
    rotation: 0
    state: enabled
- name: blocks_vector_source_x_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'True'
    tags: '[]'
    type: float
    vector: '[-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,1,1,-1,1,-1,1,-1,1,1,-1,1,1,-1,-1,-1,1,1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,1,1,1,1,-1,-1,1,1,1,1,-1,-1,-1,1,-1,1,1,-1,1,1,1,-1,-1,1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,1,-1,-1,1,1,-1,-1,1,1,1,-1,1,-1,-1,-1,1,1,1,1,1,-1,1,1,1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,-1,1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,-1,1,-1,1,-1,1,1,1,-1,1,-1,1,1,1,1,-1,-1,1,-1,-1,1,-1,1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,1,-1,1,1,1,-1,1,-1,-1,1,1,1,1,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,1,-1,1,-1,1,1,1,1,1,-1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,1,1,-1,1,1,1,-1,1,1,-1,1,1,-1,1,-1,1,1,-1,-1,-1,-1,-1,1,-1,1,1,1,-1,1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1,-1,-1,1,1,-1,1,-1,1,1,1,-1,-1,-1,1,1,-1,1,-1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,1,-1,-1,1,-1,1,1,-1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,-1,1,-1,1,1,-1,-1,1,-1,-1,1,1,1,1,1,1,-1,1,1,-1,1,-1,-1,1,-1,-1,1,-1,-1,1,1,-1,1,1,1,1,1,1,-1,-1,1,-1,1,1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,-1,1,1,-1,-1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,1,-1,1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,1,-1,-1,-1,1,-1,-1,-1,-1]'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 104.0]
    rotation: 0
    state: enabled
- name: blocks_vector_source_x_0_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'True'
    tags: '[]'
    type: int
    vector: Data
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 184.0]
    rotation: 0
    state: enabled
- name: digital_corr_est_cc_0
  id: digital_corr_est_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    mark_delay: '509'
    maxoutbuf: '0'
    minoutbuf: '0'
    sps: '1'
    symbols: '[-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,1,1,-1,1,-1,1,-1,1,1,-1,1,1,-1,-1,-1,1,1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,1,-1,-1,-1,1,1,-1,1,1,-1,-1,1,1,1,1,1,-1,-1,1,1,1,1,-1,-1,-1,1,-1,1,1,-1,1,1,1,-1,-1,1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,1,-1,-1,1,1,-1,-1,1,1,1,-1,1,-1,-1,-1,1,1,1,1,1,-1,1,1,1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,-1,1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,1,1,1,-1,-1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,-1,1,-1,1,-1,1,1,1,-1,1,-1,1,1,1,1,-1,-1,1,-1,-1,1,-1,1,1,1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,1,-1,1,1,1,-1,1,-1,-1,1,1,1,1,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,1,-1,1,-1,1,1,1,1,1,-1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,1,1,-1,1,1,1,-1,1,1,-1,1,1,-1,1,-1,1,1,-1,-1,-1,-1,-1,1,-1,1,1,1,-1,1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1,-1,-1,1,1,-1,1,-1,1,1,1,-1,-1,-1,1,1,-1,1,-1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,1,-1,-1,1,-1,1,1,-1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,-1,1,-1,1,1,-1,-1,1,-1,-1,1,1,1,1,1,1,-1,1,1,-1,1,-1,-1,1,-1,-1,1,-1,-1,1,1,-1,1,1,1,1,1,1,-1,-1,1,-1,1,1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,-1,1,1,-1,-1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,1,-1,1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,1,-1,-1,-1,1,-1,-1,-1,-1]'
    threshold: '0.01'
    threshold_method: digital.THRESHOLD_ABSOLUTE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [28.0, 328]
    rotation: 270
    state: disabled
- name: epy_block_0
  id: epy_block
  parameters:
    M: M
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      import time\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded\
      \ Python Block example - a simple multiply const\"\"\"\n\n    def __init__(self,\
      \ M=4):  # only default arguments here\n        \"\"\"arguments to this function\
      \ show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n    \
      \        self,\n            name='QAM Modulator',   # will show up in GRC\n\
      \            in_sig=[np.int32],\n            out_sig=[np.complex64]\n      \
      \  )\n        self.M = M\n        self.tM = self.M\n        self.c = 0\n   \
      \     \n    def modulat(self, MO):\n        if MO == 2:\n            cons =\
      \ (np.array([1+0*1j,-1+0*1j]))\n        else:\n            n = np.arange(0,MO)\n\
      \            a = np.asarray([x^(x>>1) for x in n])\n            D = np.sqrt(MO).astype(int)\n\
      \            a = np.reshape(a,(D,D))\n            a[1::2, :] = a[1::2, ::-1]\n\
      \            nGray=np.reshape(a,(MO))\n            x1 = nGray//D\n         \
      \   y = nGray%D\n            Ay=2*y+1-D\n            Ax=2*x1+1-D\n         \
      \   cons = Ax+1j*Ay\n            cons = cons/np.max(np.absolute((np.real(cons))))\n\
      \        return cons\n\n    def work(self, input_items, output_items):\n   \
      \     \n        self.cons = self.modulat(self.M)\n                \n       \
      \ for xx in range(len(input_items[0])):\n            output_items[0][xx] = self.cons[input_items[0][xx]]\n\
      \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('QAM Modulator', 'blk', [('M', '4')], [('0', 'int', 1)], [('0', 'complex',
      1)], 'Embedded Python Block example - a simple multiply const', ['M'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 196.0]
    rotation: 0
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import time\nimport random\nimport numpy as np\n\nfrom gnuradio\
      \ import gr\nfrom gnuradio import gr_unittest\nfrom gnuradio import digital\n\
      from gnuradio import blocks\nfrom gnuradio import grc\nimport pmt\nimport inspect\n\
      \nclass blk(gr.basic_block):\n    def __init__(self, frame_length=1):\n    \
      \    \n        gr.basic_block.__init__(\n            self,\n            name=\"\
      Preamble Demux\",\n            in_sig=[np.float32],\n            out_sig=[np.float32]\n\
      \        )\n        self.a = 0\n        self.aa = 0\n        self.buf = []\n\
      \        self.off = 0\n        self.det = 0\n        self.flg2 = 0\n       \
      \ self.b = 0\n        self.frame_length = frame_length\n        \n    def forecast(self,\
      \ noutput_items, ninput_items_required):\n        #setup size of input_items[i]\
      \ for work call\n        for i in range(len(ninput_items_required)):\n     \
      \       ninput_items_required[i] = 4096\n            \n    def general_work(self,\
      \ input_items, output_items):\n        in0 = input_items[0]\n        out = output_items[0]\n\
      \        \n        if self.det == 0:\n            tags = self.get_tags_in_window(0,\
      \ 0, len(in0))\n            for tag in tags:\n                offset = tag.offset\n\
      \                key = pmt.to_python(tag.key) # convert from PMT to python string\n\
      \                if key == 'corr_est':\n                    self.off = offset\n\
      \                    self.det = 1\n                    self.flg2 = 0\n     \
      \               self.buf.extend(in0[(self.off-self.aa)+2:])\n              \
      \      break\n            if self.det == 0:\n                self.b = 0\n  \
      \                  \n        if len(self.buf)<self.frame_length and self.det\
      \ == 1 and self.flg2 == 1:\n            self.buf.extend(in0)\n        \n   \
      \     if len(self.buf)>=self.frame_length and self.det == 1 and len(out)>=self.frame_length:\n\
      \            out[:self.frame_length] = self.buf[:self.frame_length]\n      \
      \      if len(self.buf) == self.frame_length:\n                self.buf = []\n\
      \                self.det = 0\n                self.b = 1\n            else:\n\
      \                tags = self.get_tags_in_window(0, 0, len(in0))\n          \
      \      for tag in tags:\n                    self.offset2 = tag.offset\n   \
      \                 key = pmt.to_python(tag.key) # convert from PMT to python\
      \ string\n                    if key == 'corr_est':\n                      \
      \  if self.offset2 == self.off:\n                            self.buf = []\n\
      \                            self.det = 0\n                            self.b\
      \ = 1\n                            break\n                        else:\n  \
      \                          self.off = self.offset2\n                       \
      \     self.det = 1\n                            self.flg2 = 0\n            \
      \                self.buf=[]\n                            self.buf.extend(in0[(self.off-self.aa)+2:])\n\
      \                            self.b = 1\n                            break\n\
      \n        self.flg2 = 1\n        self.aa = self.aa + len(in0)\n        \n  \
      \      self.consume(0, len(in0)) #consume port 0 input\n        \n        if\
      \ self.b == 0:\n            return 0\n        else:\n            return self.frame_length\n"
    affinity: ''
    alias: ''
    comment: ''
    frame_length: fram_len
    maxoutbuf: ''
    minoutbuf: '0'
  states:
    _io_cache: ('Preamble Demux', 'blk', [('frame_length', '1')], [('0', 'float',
      1)], [('0', 'float', 1)], '', ['frame_length'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [172.0, 408]
    rotation: 90
    state: disabled
- name: epy_block_3
  id: epy_block
  parameters:
    M: M
    _source_code: "import numpy as np\nimport math\nimport cmath\nfrom gnuradio import\
      \ gr\n\nimport time\nimport random\nfrom gnuradio import gr_unittest\nfrom gnuradio\
      \ import digital\nfrom gnuradio import blocks\nfrom gnuradio import grc\nimport\
      \ pmt\nimport inspect\n\nclass blk(gr.sync_block):  # other base classes are\
      \ basic_block, decim_block, interp_block\n\n    def __init__(self, data=[],\
      \ M=4):  # only default arguments here\n        gr.sync_block.__init__(\n  \
      \          self,\n            name='CAP Equalizer',   # will show up in GRC\n\
      \            in_sig=[np.complex64],\n            out_sig=[np.complex64]\n  \
      \      )\n        self.aa = 0\n        self.off=0\n        self.data = data\n\
      \        self.M = M\n        self.phOff = 0\n        self.bin_d2 = []\n    \
      \    self.c = 0\n        self.zz = []\n        self.zy = 0\n        self.a =\
      \ []\n        self.phOffT = 0\n        self.phOffM = 0\n        self.cc = 0\n\
      \        self.ccc = 0\n        self.flg = 0\n        self.xr = []\n        self.xi\
      \ = []\n        self.bin_d2=np.zeros(len(self.data), dtype=complex)\n      \
      \  \n    def modulat(self, MO):\n        if MO == 2:\n            cons = (np.array([1+0*1j,-1+0*1j]))\n\
      \        else:\n            n = np.arange(0,MO)\n            a = np.asarray([x^(x>>1)\
      \ for x in n])\n            D = np.sqrt(MO).astype(int)\n            a = np.reshape(a,(D,D))\n\
      \            a[1::2, :] = a[1::2, ::-1]\n            nGray=np.reshape(a,(MO))\n\
      \            x1 = nGray//D\n            y = nGray%D\n            Ay=2*y+1-D\n\
      \            Ax=2*x1+1-D\n            cons = Ax+1j*Ay\n            cons = cons/np.max(np.absolute((np.real(cons))))\n\
      \        return cons\n        \n    def work(self, input_items, output_items):\n\
      \n        in0 = input_items[0]\n\n        ws = 100\n        \n        if self.cc\
      \ >= ws:\n            self.xr[self.ccc] = np.sqrt(np.mean(np.real(in0)**2))\n\
      \            self.xi[self.ccc] = np.sqrt(np.mean(np.imag(in0)**2))\n       \
      \     self.ccc += 1\n            if self.ccc == ws:\n                self.ccc\
      \ = 0\n        else:\n            self.xr.append(np.sqrt(np.mean(np.real(in0)**2)))\n\
      \            self.xi.append(np.sqrt(np.mean(np.imag(in0)**2)))\n           \
      \ self.cc += 1\n            \n        self.rmsR = np.mean(self.xr)\n       \
      \ self.rmsI = np.mean(self.xi)\n        \n        if self.rmsR != 0 and self.rmsI\
      \ != 0:\n            eq = np.array((1/np.sqrt(2))*np.real(in0)/self.rmsR)+np.array((1/np.sqrt(2))*np.imag(in0)/self.rmsI)*1j\n\
      \        else:\n            eq = in0\n\n        if self.flg == 0:\n        \
      \    self.flg = 1\n            self.cons = self.modulat(self.M)\n        \n\
      \        for yy in range(len(self.data)):\n            self.bin_d2[yy] = self.cons[self.data[yy]]\n\
      \            \n        tags = self.get_tags_in_window(0, 0, len(in0))\n    \
      \    for tag in tags:\n            key = pmt.to_python(tag.key) # convert from\
      \ PMT to python string\n            if key == 'pck':\n                self.off\
      \ = tag.offset\n                if (self.off-self.aa) + len(self.bin_d2)+1 >=\
      \ len(in0):\n                    a = (in0[(self.off-self.aa)+1:])\n        \
      \            self.phOff = (np.mean(np.angle(self.bin_d2[:(len(in0)-(self.off-self.aa)-1)]*np.conj(a))))\n\
      \                else:\n                    a = (in0[(self.off-self.aa)+1:(self.off-self.aa)\
      \ + len(self.bin_d2)+1])\n                    self.phOff = (np.mean(np.angle(self.bin_d2*np.conj(a))))\n\
      \                    \n        output_items[0][:] = cmath.exp(np.real(self.phOff)*1j)*eq\n\
      \        \n        self.aa = self.aa + len(input_items[0])\n\n        return\
      \ len(output_items[0])\n\n"
    affinity: ''
    alias: ''
    comment: ''
    data: Data
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('CAP Equalizer', 'blk', [('data', '[]'), ('M', '4')], [('0', 'complex',
      1)], [('0', 'complex', 1)], '', ['M', 'data'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 472.0]
    rotation: 180
    state: disabled
- name: epy_block_4
  id: epy_block
  parameters:
    M: M
    _source_code: "import time\nimport random\nimport numpy as np\n\nfrom gnuradio\
      \ import gr\nfrom gnuradio import gr_unittest\nfrom gnuradio import digital\n\
      from gnuradio import blocks\nfrom gnuradio import grc\nimport pmt\nimport inspect\n\
      \n\nclass blk(gr.sync_block):  # other base classes are basic_block, decim_block,\
      \ interp_block\n\n    def __init__(self, M=4):  # only default arguments here\n\
      \        gr.sync_block.__init__(\n            self,\n            name='QAM Demodulator',\
      \   # will show up in GRC\n            in_sig=[np.complex64],\n            out_sig=[np.int16]\n\
      \        )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.flg\
      \ = 0\n        self.M=M\n\n        \n    def modulat(self, MO):\n        if\
      \ MO == 2:\n            cons = (np.array([1+0*1j,-1+0*1j]))\n        else:\n\
      \            n = np.arange(0,MO)\n            a = np.asarray([x^(x>>1) for x\
      \ in n])\n            D = np.sqrt(MO).astype(int)\n            a = np.reshape(a,(D,D))\n\
      \            a[1::2, :] = a[1::2, ::-1]\n            nGray=np.reshape(a,(MO))\n\
      \            x1 = nGray//D\n            y = nGray%D\n            Ay=2*y+1-D\n\
      \            Ax=2*x1+1-D\n            cons = Ax+1j*Ay\n            cons = cons/np.max(np.absolute((np.real(cons))))\n\
      \        return cons\n\n    def work(self, input_items, output_items):\n   \
      \     if self.flg == 0:\n            self.dp = self.modulat(self.M)\n      \
      \      self.flg = 1\n        \n        tdat = np.transpose(np.tile(input_items[0],(len(self.dp),1)))\n\
      \        tcons = np.tile(self.dp,(len(input_items[0]),1))\n\n        ll = np.subtract(tdat,tcons)\n\
      \        min_ind = np.argmin(np.sqrt(np.real(ll)**2 + np.imag(ll)**2),axis=1)\n\
      \        output_items[0][:] = min_ind.astype('int')\n        \n\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('QAM Demodulator', 'blk', [('M', '4')], [('0', 'complex', 1)], [('0',
      'short', 1)], '', ['M'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [960, 580.0]
    rotation: 180
    state: disabled
- name: epy_block_5
  id: epy_block
  parameters:
    M: M
    _source_code: "import time\nimport random\nimport numpy as np\n\nfrom gnuradio\
      \ import gr\nfrom gnuradio import gr_unittest\nfrom gnuradio import digital\n\
      from gnuradio import blocks\nfrom gnuradio import grc\nimport pmt\nimport inspect\n\
      \n\nclass blk(gr.sync_block):\n\n    def __init__(self, data=[], M=4, display_BER\
      \ = 0, num_bits = 1000000):\n        gr.sync_block.__init__(\n            self,\n\
      \            name='BER',\n            in_sig=[np.int16],\n            out_sig=[np.float32]\n\
      \        )\n        self.bin_data = data\n        self.e = 0\n        self.p\
      \ = 0\n        self.buf = []\n        self.flg = 0\n        self.k = np.sqrt(M)\n\
      \        self.ber = 1\n        self.display_BER = display_BER\n        self.num_bits\
      \ = num_bits\n        self.aa = 0\n\n    def work(self, input_items, output_items):\n\
      \        if self.flg == 1:\n            self.flg = 0\n            self.buf.extend(input_items[0][:len(self.bin_data)-len(self.buf)+10])\n\
      \            self.p += 1\n            for j in range(len(self.bin_data)):\n\
      \                if j<len(self.buf):\n                    self.e += sum(np.array(list(bin(int(self.buf[j])^self.bin_data[j])[2:])).astype('int'))\n\
      #            if self.aa == 0:\n#                print(self.bin_data)\n#    \
      \            print('-----------------')\n#                print(self.buf)\n\
      #                self.aa = 1\n#        self.aa = 0\n        if self.flg == 0:\n\
      \            tags = self.get_tags_in_window(0, 0, len(input_items[0]))\n   \
      \         for tag in tags:\n                offset = tag.offset\n          \
      \      key = pmt.to_python(tag.key) # convert from PMT to python string\n  \
      \              value = pmt.to_python(tag.value)\n                if key == 'pck':\n\
      \                    self.off = offset\n                    if (self.off-self.nitems_read(0)+1)\
      \ + len(self.bin_data) < len(input_items[0]):\n                        self.p\
      \ += 1\n                        for i in range(len(self.bin_data)):\n      \
      \                      self.e += sum(np.array(list(bin(int(input_items[0][(self.off-self.nitems_read(0)+1)+i])^self.bin_data[i])[2:])).astype('int'))\n\
      \                    else:\n                        self.buf=[]\n          \
      \              self.buf.extend(input_items[0][(self.off-self.nitems_read(0)+1):])\n\
      \                        self.flg = 1\n                        \n        if\
      \ self.p*(self.k*len(self.bin_data)) > self.num_bits:\n            self.ber\
      \ = self.e/(self.p*(self.k*len(self.bin_data)))\n            self.e = 0\n  \
      \          self.p = 0\n            if self.display_BER == 1:\n             \
      \   print(self.ber)\n\n        output_items[0][:] = self.ber*np.ones(len(output_items[0]))\n\
      \        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    data: Data
    display_BER: P
    maxoutbuf: '0'
    minoutbuf: '0'
    num_bits: 1e6
  states:
    _io_cache: ('BER', 'blk', [('data', '[]'), ('M', '4'), ('display_BER', '0'), ('num_bits',
      '1000000')], [('0', 'short', 1)], [('0', 'float', 1)], '', ['display_BER', 'num_bits'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [800, 560.0]
    rotation: 180
    state: disabled
- name: epy_module_0
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: 'import numpy as np


      np.random.seed(444)

      '
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 4.0]
    rotation: 0
    state: true
- name: fir_filter_xxx_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: quad
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 256.0]
    rotation: 0
    state: enabled
- name: fir_filter_xxx_0_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: numpy.flip(quad)
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 392.0]
    rotation: 0
    state: disabled
- name: fir_filter_xxx_1
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: inph
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 176.0]
    rotation: 0
    state: enabled
- name: fir_filter_xxx_1_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: numpy.flip(inph)
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 344.0]
    rotation: 0
    state: disabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math,cmath,numpy, random, time
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 84.0]
    rotation: 0
    state: true
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: (0,0,2,1)
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '4096'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_TAG
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: pck
    type: complex
    update_time: '0.1'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 472.0]
    rotation: 180
    state: disabled
- name: qtgui_const_sink_x_1
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 128.0]
    rotation: 180
    state: disabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'False'
    grid: 'False'
    gui_hint: (1,1,1,1)
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_TAG
    tr_tag: pck
    type: float
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: firdes.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 452.0]
    rotation: 0
    state: disabled
- name: qtgui_number_sink_0
  id: qtgui_number_sink
  parameters:
    affinity: ''
    alias: ''
    autoscale: 'False'
    avg: '0'
    color1: ("black", "black")
    color10: ("black", "black")
    color2: ("black", "black")
    color3: ("black", "black")
    color4: ("black", "black")
    color5: ("black", "black")
    color6: ("black", "black")
    color7: ("black", "black")
    color8: ("black", "black")
    color9: ("black", "black")
    comment: ''
    factor1: '1'
    factor10: '1'
    factor2: '1'
    factor3: '1'
    factor4: '1'
    factor5: '1'
    factor6: '1'
    factor7: '1'
    factor8: '1'
    factor9: '1'
    graph_type: qtgui.NUM_GRAPH_HORIZ
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    max: '1'
    min: '-1'
    name: '""'
    nconnections: '1'
    type: float
    unit1: ''
    unit10: ''
    unit2: ''
    unit3: ''
    unit4: ''
    unit5: ''
    unit6: ''
    unit7: ''
    unit8: ''
    unit9: ''
    update_time: '0.10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 568.0]
    rotation: 180
    state: disabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '8192'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_TAG
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: corr_est
    type: float
    update_time: '0.01'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '30000'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 696.0]
    rotation: 180
    state: disabled
- name: qtgui_time_sink_x_1_2
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: (0,1,1,1)
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '64'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_TAG
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: pck
    type: complex
    update_time: '0.1'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 568.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_2
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '4096'
    srate: '1'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_TAG
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: pck
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 648.0]
    rotation: 0
    state: disabled
- name: zeromq_pull_source_0
  id: zeromq_pull_source
  parameters:
    address: ''
    affinity: ''
    alias: ''
    comment: ''
    hwm: '-1'
    maxoutbuf: '0'
    minoutbuf: '0'
    pass_tags: 'False'
    timeout: '100'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 256.0]
    rotation: 180
    state: disabled
- name: zeromq_push_sink_0
  id: zeromq_push_sink
  parameters:
    address: tcp://192.168.1.59:8080
    affinity: ''
    alias: ''
    comment: ''
    hwm: '-1'
    pass_tags: 'False'
    timeout: '100'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1104, 344.0]
    rotation: 0
    state: enabled

connections:
- [blocks_add_xx_0, '0', blocks_stream_to_tagged_stream_1, '0']
- [blocks_complex_to_float_0, '0', blocks_vector_insert_x_0, '0']
- [blocks_complex_to_float_0, '1', blocks_vector_insert_x_0_0, '0']
- [blocks_complex_to_float_1, '0', epy_block_1, '0']
- [blocks_complex_to_mag_squared_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_float_to_complex_0, '0', zeromq_push_sink_0, '0']
- [blocks_float_to_complex_1, '0', blocks_keep_m_in_n_0, '0']
- [blocks_keep_m_in_n_0, '0', epy_block_3, '0']
- [blocks_keep_m_in_n_1, '0', blocks_tag_gate_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', blocks_tagged_stream_mux_0, '0']
- [blocks_stream_to_tagged_stream_1, '0', blocks_tagged_stream_mux_0, '1']
- [blocks_stream_to_tagged_stream_2, '0', blocks_file_sink_0_1, '0']
- [blocks_stream_to_tagged_stream_2, '0', fir_filter_xxx_0_0, '0']
- [blocks_stream_to_tagged_stream_2, '0', fir_filter_xxx_1_0, '0']
- [blocks_stream_to_tagged_stream_2, '0', qtgui_freq_sink_x_0, '0']
- [blocks_stream_to_tagged_stream_2, '0', qtgui_time_sink_x_2, '0']
- [blocks_tag_gate_0, '0', blocks_stream_to_tagged_stream_2, '0']
- [blocks_tagged_stream_mux_0, '0', blocks_float_to_complex_0, '0']
- [blocks_vector_insert_x_0, '0', fir_filter_xxx_1, '0']
- [blocks_vector_insert_x_0_0, '0', fir_filter_xxx_0, '0']
- [blocks_vector_source_x_0, '0', blocks_stream_to_tagged_stream_0, '0']
- [blocks_vector_source_x_0_0, '0', epy_block_0, '0']
- [digital_corr_est_cc_0, '0', blocks_complex_to_float_1, '0']
- [digital_corr_est_cc_0, '1', blocks_complex_to_mag_squared_0, '0']
- [epy_block_0, '0', blocks_complex_to_float_0, '0']
- [epy_block_0, '0', blocks_file_sink_0_0, '0']
- [epy_block_0, '0', qtgui_const_sink_x_1, '0']
- [epy_block_1, '0', blocks_keep_m_in_n_1, '0']
- [epy_block_3, '0', epy_block_4, '0']
- [epy_block_3, '0', qtgui_const_sink_x_0, '0']
- [epy_block_4, '0', epy_block_5, '0']
- [epy_block_5, '0', qtgui_number_sink_0, '0']
- [fir_filter_xxx_0, '0', blocks_add_xx_0, '1']
- [fir_filter_xxx_0_0, '0', blocks_float_to_complex_1, '1']
- [fir_filter_xxx_1, '0', blocks_add_xx_0, '0']
- [fir_filter_xxx_1_0, '0', blocks_float_to_complex_1, '0']
- [zeromq_pull_source_0, '0', digital_corr_est_cc_0, '0']

metadata:
  file_format: 1
